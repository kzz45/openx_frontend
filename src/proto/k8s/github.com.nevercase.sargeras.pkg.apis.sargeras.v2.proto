/*
Copyright 2019 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package github.com.nevercase.sargeras.pkg.apis.sargeras.v2;

import "k8s.io/api/apps/v1/generated.proto";
import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v2";

message Affinity {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Spec is the custom resource spec
  optional AffinitySpec spec = 2;
}

message AffinityList {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Affinity items = 2;
}

message AffinitySpec {
  optional k8s.io.api.core.v1.Affinity affinity = 1;
}

message AliyunAccessControl {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Spec is the custom resource spec
  optional AliyunAccessControlSpec spec = 2;
}

message AliyunAccessControlList {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated AliyunAccessControl items = 2;
}

message AliyunAccessControlSpec {
  optional CloudLoadBalancerObject instance = 1;

  optional CloudLoadBalancerObject status = 2;

  optional CloudLoadBalancerObject type = 3;
}

message AliyunLoadBalancer {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Spec is the custom resource spec
  optional AliyunLoadBalancerSpec spec = 2;
}

message AliyunLoadBalancerList {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated AliyunLoadBalancer items = 2;
}

message AliyunLoadBalancerSpec {
  optional CloudLoadBalancerObject instance = 1;

  optional CloudLoadBalancerObject overrideListeners = 2;
}

message AliyunSLB {
  optional string loadBalancerId = 1;

  optional bool overrideListeners = 2;

  optional string status = 3;

  optional string accessControlId = 4;
}

message App {
  optional string appName = 1;

  optional k8s.io.api.core.v1.Pod pod = 2;

  optional k8s.io.api.core.v1.Service service = 3;

  optional PersistentStorage persistentStorage = 4;

  optional CloudNetworkConfig cloudNetworkConfig = 5;

  // Replicas was the number of the Pod
  // If the Role was ClusterRoleMaster, the replicas could only be 1.
  optional int32 replicas = 6;

  // Watch policy for the present app.
  // One of Auto, Manual.
  // Default to Manual.
  optional string watchPolicy = 7;
}

message CloudLoadBalancerObject {
  optional string key = 1;

  optional string value = 2;
}

// CloudNetworkConfig was the config for the cloud service provider, e.g. Aliyun
message CloudNetworkConfig {
  optional AliyunSLB aliyunSLB = 1;
}

message ClusterStatus {
  optional k8s.io.api.apps.v1.StatefulSetStatus master = 1;

  optional k8s.io.api.apps.v1.StatefulSetStatus slave = 2;
}

message Etcd {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Spec is the custom resource spec
  optional EtcdSpec spec = 2;

  optional k8s.io.api.apps.v1.StatefulSetStatus status = 3;
}

message EtcdList {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Etcd items = 2;
}

message EtcdSpec {
  optional int32 replicas = 1;

  optional PersistentStorage persistentStorage = 2;

  optional k8s.io.api.core.v1.Pod pod = 3;
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:subresource:status
// Mysql describes a Mysql resource
message Mysql {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Spec is the custom resource spec
  optional MysqlSpec spec = 2;

  optional ClusterStatus status = 3;
}

message MysqlConfig {
  // The role of the server in the clusters.
  optional string role = 1;

  // The config of the mysql instance.
  optional MysqlServerConfig mysqlServerConfig = 2;

  optional k8s.io.api.core.v1.Pod pod = 3;

  optional k8s.io.api.core.v1.Service service = 4;

  optional PersistentStorage persistentStorage = 5;

  optional CloudNetworkConfig cloudNetworkConfig = 6;

  // Replicas was the number of the Pod
  // If the Role was ClusterRoleMaster, the replicas could only be 1.
  optional int32 replicas = 7;
}

// MysqlList is a list of MysqlOperator resources
message MysqlList {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Mysql items = 2;
}

// MysqlServerConfig is the configuration for a MysqlDeploymentSpec of a MysqlOperator resource
message MysqlServerConfig {
  optional int32 server_id = 1;

  optional string host = 2;

  optional string user = 3;

  optional string password = 4;

  optional string log_file = 5;

  optional string log_position = 6;
}

// MysqlSpec is the spec for a Mysql resource
message MysqlSpec {
  optional MysqlConfig master = 1;

  optional MysqlConfig slave = 2;
}

message NodeSelector {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Spec is the custom resource spec
  optional NodeSelectorSpec spec = 2;
}

message NodeSelectorList {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated NodeSelector items = 2;
}

message NodeSelectorSpec {
  map<string, string> nodeSelector = 1;
}

// PersistentStorage will provide a persistent volume path, such as mount a Nas.
message PersistentStorage {
  // StorageVolumePath will append a volume for the pod. It would be used by the bin to save data.
  optional string storageVolumePath = 1;
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// Redis describes a Redis resource
message Redis {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Spec is the custom resource spec
  optional RedisSpec spec = 2;

  optional ClusterStatus status = 3;
}

message RedisConfig {
  // The role of the server in the clusters.
  optional string role = 1;

  optional k8s.io.api.core.v1.Pod pod = 2;

  optional k8s.io.api.core.v1.Service service = 3;

  optional PersistentStorage persistentStorage = 4;

  optional CloudNetworkConfig cloudNetworkConfig = 5;

  // Replicas was the number of the Pod
  // If the Role was ClusterRoleMaster, the replicas could only be 1.
  optional int32 replicas = 6;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// RedisList is a list of RedisOperator resources
message RedisList {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Redis items = 2;
}

message RedisSpec {
  optional RedisConfig master = 1;

  optional RedisConfig slave = 2;
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// Thrall describes a Thrall resource
message Thrall {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Spec is the custom resource spec
  optional ThrallSpec spec = 2;

  optional ThrallStatus status = 3;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// ThrallList is a list of Thrall resources
message ThrallList {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Thrall items = 2;
}

// ThrallSpec is the spec for a Thrall resource
message ThrallSpec {
  repeated App applications = 1;
}

message ThrallStatus {
  map<string, k8s.io.api.apps.v1.DeploymentStatus> items = 1;
}

message Toleration {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Spec is the custom resource spec
  optional TolerationSpec spec = 2;
}

message TolerationList {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Toleration items = 2;
}

message TolerationSpec {
  optional k8s.io.api.core.v1.Toleration toleration = 1;
}

