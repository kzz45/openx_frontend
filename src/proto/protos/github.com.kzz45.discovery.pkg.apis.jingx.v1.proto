/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package github.com.kzz45.discovery.pkg.apis.jingx.v1;

import "github.com/kzz45/discovery/pkg/apis/rbac/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "github.com/kzz45/discovery/pkg/apis/jingx/v1";

message DockerImage {
  optional string sha256 = 1;

  optional string author = 2;

  optional int64 lastModifiedTime = 3;
}

message Event {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional EventSpec spec = 2;
}

message EventList {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Event items = 2;
}

message EventSpec {
  optional string author = 1;

  optional github.com.kzz45.discovery.pkg.apis.rbac.v1.GroupVersionKind groupVersionKind = 2;

  optional string verb = 3;

  optional bytes raw = 4;
}

message GitReference {
  optional string git = 1;

  optional string branch = 2;

  optional string commitHash = 3;
}

message Project {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ProjectSpec spec = 2;
}

message ProjectList {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Project items = 2;
}

message ProjectSpec {
  optional int32 id = 1;

  optional string name = 2;

  optional string desc = 3;

  optional string publicAddr = 4;

  optional string privateAddr = 5;
}

message Repository {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional RepositorySpec spec = 2;
}

message RepositoryList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Repository items = 2;
}

message RepositoryMeta {
  // ProjectName was the Project's object name
  optional string projectName = 1;

  // RepositoryName was the repository name, it wasn't the final Repository's object name
  // The final Repository's object name should be ProjectName + RepositoryName
  optional string repositoryName = 2;
}

message RepositorySpec {
  optional RepositoryMeta repositoryMeta = 1;
}

message Tag {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional TagSpec spec = 2;
}

message TagList {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Tag items = 2;
}

message TagSpec {
  optional RepositoryMeta repositoryMeta = 1;

  optional string tag = 2;

  optional GitReference gitReference = 3;

  optional DockerImage dockerImage = 4;
}

