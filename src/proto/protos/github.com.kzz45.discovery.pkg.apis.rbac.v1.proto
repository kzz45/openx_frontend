/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package github.com.kzz45.discovery.pkg.apis.rbac.v1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "github.com/kzz45/discovery/pkg/apis/rbac/v1";

message AccountMeta {
  optional string username = 1;

  optional string nickname = 2;

  optional string password = 3;

  optional string email = 4;
}

// App was an application for rbac
message App {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AppSpec spec = 2;
}

// AppList is a list of App resources
message AppList {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated App items = 2;
}

// AppServiceAccount was the service account which could only be used inside
// the specified application.
message AppServiceAccount {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AppServiceAccountSpec spec = 2;
}

// AppServiceAccountList is a list of AppServiceAccount resources
message AppServiceAccountList {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated AppServiceAccount items = 2;
}

message AppServiceAccountSpec {
  optional string desc = 1;

  optional RoleRef roleRef = 2;

  optional AccountMeta accountMeta = 3;
}

message AppSpec {
  optional string id = 1;

  optional string secret = 2;

  optional string desc = 3;
}

// ClusterRole was the base role for rbac
message ClusterRole {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ClusterRoleSpec spec = 2;
}

// ClusterRoleList is a list of ClusterRole resources
message ClusterRoleList {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated ClusterRole items = 2;
}

message ClusterRoleSpec {
  optional string desc = 1;

  repeated PolicyRule rules = 2;
}

// GroupVersionKind unambiguously identifies a kind.  It doesn't anonymously include GroupVersion
// to avoid automatic coercion.  It doesn't use a GroupVersion to avoid custom marshalling
message GroupVersionKind {
  optional string group = 1;

  optional string version = 2;

  optional string kind = 3;
}

// GroupVersionKindRule was a single element rule for role policy
message GroupVersionKindRule {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional RuleSpec spec = 2;
}

// GroupVersionKindRuleList is a list of GroupVersionKindRule resources
message GroupVersionKindRuleList {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated GroupVersionKindRule items = 2;
}

message PolicyRule {
  optional string namespace = 1;

  optional GroupVersionKind groupVersionKind = 2;

  // Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.
  // VerbAll represents all kinds.
  repeated string verbs = 3;
}

// RbacServiceAccount was the service account which could only be used to
// manage the specified application.
message RbacServiceAccount {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional RbacServiceAccountSpec spec = 2;
}

// RbacServiceAccountList is a list of RbacServiceAccount resources
message RbacServiceAccountList {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated RbacServiceAccount items = 2;
}

message RbacServiceAccountSpec {
  optional AccountMeta accountMeta = 1;

  repeated string apps = 2;
}

message RoleRef {
  optional string clusterRoleName = 1;
}

message RuleSpec {
  optional GroupVersionKind groupVersionKind = 1;

  repeated string verbs = 2;
}

